from bs4 import BeautifulSoup
from selenium import webdriver

import csv

fulltem_product_numbers = [4667509530, 4494931422, 4550972302, 4505975260, 4511851250, 4464949603, 4844646832, 4519910978, 4542385296,
                           5524187948, 4673054658, 5626955050, 5578739039, 4700703538, 5008277907, 4926016278, 4891190434, 4884863379,
                           5288181601, 4844311452, 5658967805, 5562297201, 5253269252, 5233398104, 5228528236, 5204168783, 5185055339,
                           5059504492, 5023476377, 5017102657, 4979425140, 4966023873, 4940285068, 4895262206, 4891379850, 4890219085,
                           4879477736, 4871312254, 4856690391, 4854985423, 4844030670, 4844002275, 4805378364, 4796899420, 4762868088,
                           4685810156, 4511722192]

haru_product_numbers = [5173497962, 5188964565, 5401455752, 5214163590, 5502541013, 5329959592, 5644265630, 5598375034, 5172964803, 5519664795, 5176279024,
                        5659000901, 5688615382, 5654361360, 5553037744, 5450953283, 5325729351, 5172315764, 5141577021, 5141574763, 5141567783, 5141565149, 5141563031, 5141553088]

lena_product_numbers = [5081184178, 5158661868, 5190748987, 5151204988, 5648457919, 5606044466,
                        5584177987, 5311980801, 5234026695, 5227912228, 5164393941, 5099314476, 5099299515, 5086165617]

sondori_product_numbers = [5651042389, 5648442672, 5646558675, 5611597202, 5523372881, 5380767747, 5380717224, 5374609191, 5374606770, 5374604529, 5374601613, 5374595436,
                           5374592643, 5374587764, 5374582796, 5374578983, 5356559149, 5356509400, 5356505380, 5283403245, 5123833489, 5123775161, 5006391767, 4993864210,
                           4985108486, 4939095647, 4901562070, 4896922447, 4896919143, 4896714764, 4872206684, 4872181351, 4853069926, 4852991585, 4852986824, 4852981832,
                           4852973918, 4852931983, 4852924550, 4852910558, 4852867552, 4828936741, 4826938104, 4736641860, 4735917102, 4734740006, 4730238955, 4722444579,
                           4705340122, 4701493351, 4685010999, 4685009754, 4684979150, 4673908444, 4672719264, 4671769356, 4671591395, 4671468219, 4671306858, 4671304944,
                           4671301555, 4666062470, 4588392032, 4561240086, 4561238319, 4543617654, 4543602873, 4543572783, 4527053824, 4523301046, 4520583900, 4512617614,
                           4459350927, 4414829630, 4407822554, 4397455448, 4332671476, 4332498176, 4314837234, 4314822928, 4264545949, 4264147157, 4264033199, 4241941521,
                           4231543233, 4231336821, 3861954849, 3844595816, 3762761382, 3762744737, 3729661070, 3729657002, 3681890841, 3648908020, 3648875113, 3613564063,
                           3588549728, 3537962054, 3537930309, 3537887104, 3507901972, 3507897753, 3507892214, 3507829630, 3492684082, 3492675509, 3492666662, 3492646496,
                           3492631037, 3492621815, 3492602658, 3492595325, 3492586911, 3492580597, 3492574687, 3483221750, 3483201531, 3483160506, 3483073284, 3483059005,
                           3483014211, 3476559719, 3476532446, 3476512497, 3476347679, 3476273447, 3476015707, 3454471823, 3448675198, 3448469696, 3445317443, 3444041570,
                           3444002130, 3433735177, 3433069399, 3433066177, 3433056284, 3433049998, 3433043733, 3433034203, 3433012966, 3432993485, 3423400872, 3422651278,
                           3422582447, 3422570291, 3422534793, 3422521625, 3422504841, 3422491151, 3422475020, 3422405670, 3422380226, 3422363222, 3347815386, 3288051326,
                           3197946416, 3197930172, 3197894002, 3197887078, 3068616949, 3068543737, 3068505127, 3068463515, 3068456062, 3068446638, 3068430501, 3068021831,
                           3067960923, 3045597333, 2980276755, 2951760365, 2951720936, 2951717741, 2951713752, 2951710039, 2939827748, 2939780202, 2939757603, 2823080186,
                           2823074454, 2822676026, 2711462730, 2711169123, 2649409427, 2640973202, 2594465304, 2587035120, 2580052356, 2574453973, 2574219582, 2573946106,
                           2548800185, 2548695688, 2545392672, 2545347918, 2545296238, 2542193881, 2542074271, 2542029871, 2542005277, 2541980672, 2503154602, 2502618141,
                           2500598648, 2500538135, 2500502395, 2500480926, 2468477648, 2468469280, 2468456998, 2468449179, 2466084913, 2466029635, 2466014278, 2465111218,
                           2463235042, 2462457187, 2462446087, 2462396250, 2462366568, 2462299028, 2462197962, 2462159824, 2462120345, 2459874084, 2459081194, 2458717974,
                           2458641311, 2456307931, 2456263554, 2311712761]

mecha_product_numbers = [2916612172, 2898457985, 2885763170, 2936969302, 2885490830, 2899082913, 2895263888, 3077835922, 3378253939, 3305989347, 4053358953, 2855891646,
                         3507737969, 3452363891, 2955488012, 3223482420, 3045865640, 5657859503, 4467437050, 3412427625, 2939573685, 2916600765, 2898447352, 2879356884,
                         2872389886, 5334589940, 4517012059, 4280027285, 3974578836, 3007461959, 2875124458, 4044656576, 2955083399, 2907934837, 5391394684, 3976892801,
                         2945779736, 3227749653, 2937020382, 5541539647, 4462511920, 3227888471, 3227579106, 3223466100, 3127080868, 4414585210, 3103871052, 2907960701,
                         5116249618, 3859057705, 3077651625, 3007485835, 3005989012, 2945786105, 4058484088, 4049528810, 4043794704, 3974986933, 3946883161, 3415386329,
                         3270666079, 3223427013, 3006111998, 3006061336, 2993338938, 2981566044, 2955124756, 2940358739, 2916583964, 2899215588, 2879369399, 2872288061,
                         5506194446, 5456259775, 4503669508, 4413840221, 4413813989, 4410666434, 4346776011, 4242033417, 4146765113, 3858448103, 3586699711, 3460888105,
                         3409891544, 3375190022, 3373344506, 3262967218, 3222536375, 3101682684, 3007609646, 3007476760, 3006700233, 3006013897, 2945808141, 2945790674,
                         2940392682, 2895326638, 2879453502, 5712323673, 5667849380, 5665384209, 5637210149, 5620996267, 5611997570, 5596286058, 5555938877, 5555655674,
                         5555648958, 5555624888, 5445389705, 5346038007, 5076116462, 4960568402, 4859804516, 4849844067, 4469112332, 4468940565, 4468744385, 4462637981,
                         4462614763, 4462599386, 4462592188, 4462584892, 4462501110, 4462494568, 4462485895, 4414000299, 4413806113, 4410677778, 4410668683, 4410664033,
                         4410661300, 4410658066, 4410646298, 4410640192, 4410634561, 4410623823, 4410455134, 4410443318, 4410372156, 4410324070, 4352283123, 4352282825,
                         4315861320, 4315851008, 4315840429, 4315819791, 4315791635, 4242046539, 4242044138, 4242042182, 4242039978, 4242036535, 4242029505, 4242012517,
                         4226513358, 4226497778, 4226447061, 4226137172, 4226128163, 4226118860, 4226080808, 4226066159, 4226055974, 4226044367, 4226037935, 4226027968,
                         4191234839, 4184809275, 4184800355, 4151381201, 4147755513, 4147047397, 4142281101, 4141572078, 4136417503, 4132663172, 4132232711, 4086232499,
                         4085152183, 4083676030, 4083663163, 4083651837, 4083591196, 4076277726, 4071748797, 4071490141, 4058634720, 4054644601, 4054257173, 4054145346,
                         4053829408, 4045442726, 4045200150, 4025702277, 3989563415, 3984071497, 3974400881, 3961626238, 3594975757, 3594916866, 3594903710, 3594883876,
                         3594876176, 3588557701, 3588549649, 3588546404, 3588544635, 3588541308, 3588534083, 3586912323, 3586679593, 3528371861, 3480412949, 3452380137,
                         3449149462, 3449078498, 3449040198, 3448897447, 3448877287, 3448844491, 3448818519, 3413561849, 3413322142, 3413305274, 3412455799, 3412446031,
                         3412441605, 3412437793, 3412417520, 3412398259, 3412391104, 3412383347, 3412310712, 3412307606, 3412305746, 3412298638, 3412292412, 3412266494,
                         3412252175, 3412226438, 3409906666, 3409855971, 3378370531, 3378365316, 3378344650, 3378338424, 3378336216, 3378331370, 3375220328, 3375215570,
                         3375212036, 3375206478, 3375187351, 3319317723, 3319244379, 3302200376, 3270990953, 3270983230, 3270973043, 3270959385, 3270952822, 3270940346,
                         3270929498, 3270813202, 3270604677, 3270593918, 3270585798, 3270355033, 3270343937, 3270334630, 3270311665, 3268951344, 3268228865, 3268125781,
                         3262717794, 3228983531, 3228979567, 3227837912, 3227424191, 3128436886, 3128390263, 3128363229, 3128337244, 3128055370, 3128003838, 3127991071,
                         3127973033, 3127964774, 3127520856, 3127480895, 3127414760, 3127270110, 3127243246, 3127226146, 3127211956, 3127177830, 3127097691, 3127060424,
                         3127031031, 3126998684, 3126969116, 3126918034, 3126903622, 3126893823, 3126870652, 3126844250, 3126817036, 3126799917, 3126785665, 3126779187,
                         3126769113, 3103889617, 3083822812, 3083790156, 3083778428, 3083758392, 3048505108, 3022584975, 3022543522, 3007447870, 3006646388, 3006606547,
                         3006594570, 3006049001, 3005964957, 3005909854, 2993477290, 2993447907, 2993306467, 2993214253, 2993190284, 2991909637, 2977996993, 2977953373,
                         2972442127, 2972412924, 2970222440, 2970201202, 2955545947, 2955325112, 2955150545, 2954996328, 2945818760, 2945813566, 2945802635, 2940398248,
                         2940372210, 2940313875, 2937025297, 2916630425, 2916624012, 2916618629, 2916607344, 2907978794, 2899120178, 2898441108, 2895355508, 2895285371,
                         2885882658, 2885392305, 2885345425]

# 크롬드라이버 옵션 (headless로 할 수 있게)
options = webdriver.ChromeOptions()
options.add_argument('headless')
options.add_argument('window-size=1920x1080')
options.add_argument('disable-gpu')

# 크롬 드라이버 경로
chrome_driver_dir = '/Users/jeongjong-yun/Development/chromedriver'
driver = webdriver.Chrome(chrome_driver_dir)

driver.implicitly_wait(3)

# csv 정의
f = open('메카솔루션.csv', 'w', newline='')
wr = csv.writer(f)

for number in mecha_product_numbers:
    # url = 'https://smartstore.naver.com/fulltem/products/'+str(number)
    # url = 'https://smartstore.naver.com/haruclass/products/'+str(number)
    # url = 'https://smartstore.naver.com/lenaenergy/products/'+str(number)
    # url = 'https://smartstore.naver.com/sondori/products/'+str(number)
    url = 'https://smartstore.naver.com/mechasolution_com/products/' + \
        str(number)
    driver.get(url)

    # 썸네일 가져오기
    thumbnailes = []
    thumbnail_tags = []
    try:
        lis = driver.find_element_by_xpath(
            '//*[@id="content"]/div/div[2]/div[1]/ul').find_elements_by_tag_name('li')

        for li in lis:
            li.click()

            thumbnail = driver.find_element_by_xpath(
                '//*[@id="content"]/div/div[2]/div[1]/div[1]/div[1]/img').get_attribute('data-src')
            thumbnail_tag = driver.find_element_by_xpath(
                '//*[@id="content"]/div/div[2]/div[1]/div[1]/div[1]').get_attribute('innerHTML')

            print(thumbnail)
            print(thumbnail_tag)

            thumbnail_tag = str(thumbnail_tag)

            try:
                thumbnailes.append(thumbnail[:thumbnail.find('?')])
                thumbnail_tags.append(thumbnail_tag)
            except:
                pass
    except:
        try:
            thumbnail = driver.find_element_by_xpath(
                '//*[@id="content"]/div/div[2]/div[1]/div[1]/div[1]/img').get_attribute('data-src')
            thumbnail_tag = driver.find_element_by_xpath(
                '//*[@id="content"]/div/div[2]/div[1]/div[1]/div[1]').get_attribute('innerHTML')

            print(thumbnail)
            print(thumbnail_tag)

            try:
                thumbnailes.append(thumbnail[:thumbnail.find('?')])
                thumbnail_tags.append(thumbnail_tag)
            except:
                pass
        except:
            pass

    thumbnailes.append(thumbnail)
    thumbnail_tags.append(thumbnail_tag)

    # html 소스 받기
    html = driver.page_source
    soup = BeautifulSoup(html, 'html.parser')

    # img 받기
    image_containeres = soup.find_all(
        class_='se-image')

    # img태그가 들어있는 div태그에서 img태그 추출하기
    detailes = []
    detail_tags = []
    for container in image_containeres:
        try:
            image = container.find('img')

            image_src = image['data-src']
            detailes.append(image_src[:image_src.find('?')])
            print(image_src[:image_src.find('?')])

            image = str(image)

            # bs4로 img태그 가져오면 src값이 BASE64 인코딩으로 추출됨
            # 기존의 src 속성 값을 제거하고
            # data-src 속성 이름을 src로 변경
            result = image[:image.find('data:')-6]+'/>'
            result = result.replace('data-', '')

            detail_tags.append(result)
            print(result)
        except:
            pass

    title = soup.find(class_='_3oDjSvLwq9').text

    input_thumb = ''
    input_thumb_tag = ''
    for thumb, tag in zip(thumbnailes, thumbnail_tags):
        input_thumb += thumb
        input_thumb += '\n'

        input_thumb_tag += str(tag)
        input_thumb_tag += '\n'
    input_de = ''
    input_de_tag = ''
    for de, tag in zip(detailes, detail_tags):
        input_de += de
        input_de += '\n'

        input_de_tag += str(tag)
        input_de_tag += '\n'

    wr.writerow([title, url, input_thumb, input_thumb_tag,
                input_de, input_de_tag])

# 드라이버 종료
driver.quit()
